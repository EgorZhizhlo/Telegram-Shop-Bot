from aiogram import types
from aiogram.types import InputFile, InlineKeyboardButton, InlineKeyboardMarkup, InputMedia
from aiogram.utils.callback_data import CallbackData

import sqlite3 as sql

from create_bots import market_bot, market_dp, lava
import markups as m

connect = sql.connect('order.db')
cursor = connect.cursor()


# MENU

@market_dp.message_handler(text=['/start', '/menu'])
async def start(message: types.Message):
    shop_b = InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüõí', callback_data='shop')
    freq_quest_b = InlineKeyboardButton('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì', callback_data='freq_quest')
    guar_b = InlineKeyboardButton('–ì–∞—Ä–∞–Ω—Ç–∏–∏‚úÖ', callback_data='guardian')
    rev_b = InlineKeyboardButton('–û—Ç–∑—ã–≤—ãüåü', callback_data='rev')
    help_b = InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ü§ù', callback_data='help')
    rules_b = InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞üìï', callback_data='rules')
    admin_b = InlineKeyboardButton('–¢–∏–∫–µ—Ç—ã', callback_data='admin')

    query = "SELECT id FROM admins;"
    admins = cursor.execute(query).fetchall()

    if (str(message.chat.id),) in admins:
        await market_bot.send_photo(
            message.chat.id,
            photo=InputFile('files/main_logo.png'),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(
                *[shop_b, freq_quest_b, guar_b, rev_b, help_b, rules_b, admin_b]),
            caption=f"""üñê–ü—Ä–∏–≤–µ—Ç, <b>{message.chat.first_name}</b>!\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ <b>Hayan Shop</b>"""
        )
    else:
        await market_bot.send_photo(
            message.chat.id,
            photo=InputFile('files/main_logo.png'),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(
                *[shop_b, freq_quest_b, guar_b, rev_b, help_b, rules_b]),
            caption=f"""üñê–ü—Ä–∏–≤–µ—Ç, <b>{message.chat.first_name}</b>!\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ <b>Hayan Shop</b>"""
        )


@market_dp.callback_query_handler(text="start")
async def start_c(callback_query: types.CallbackQuery):
    shop_b = InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüõí', callback_data='shop')
    freq_quest_b = InlineKeyboardButton('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì', callback_data='freq_quest')
    guar_b = InlineKeyboardButton('–ì–∞—Ä–∞–Ω—Ç–∏–∏‚úÖ', callback_data='guardian')
    rev_b = InlineKeyboardButton('–û—Ç–∑—ã–≤—ãüåü', callback_data='rev')
    help_b = InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ü§ù', callback_data='help')
    rules_b = InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞üìï', callback_data='rules')
    admin_b = InlineKeyboardButton('–¢–∏–∫–µ—Ç—ã', callback_data='admin')

    query = "SELECT id FROM admins;"
    admins = cursor.execute(query).fetchall()

    if (str(callback_query.message.chat.id),) in admins:
        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile('files/main_logo.png'),
                       caption=f'üñê–ü—Ä–∏–≤–µ—Ç, <b>{callback_query.message.chat.first_name}</b>!\n'
                               f'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ <b>Hayan Shop</b>\n'),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(
                *[shop_b, freq_quest_b, guar_b, rev_b, help_b, rules_b, admin_b])
        )
    else:
        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile('files/main_logo.png'),
                       caption=f'üñê–ü—Ä–∏–≤–µ—Ç, <b>{callback_query.message.chat.first_name}</b>!\n'
                               f'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ <b>Hayan Shop</b>\n'),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(
                *[shop_b, freq_quest_b, guar_b, rev_b, help_b, rules_b])
        )


@market_dp.callback_query_handler(text="admin")
async def shop(callback_query: types.CallbackQuery):
    new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_ticket')
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='start')

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å <b>HayanShop</b>\n'),
        reply_markup=InlineKeyboardMarkup(row_width=2).add(*[new_ticket_b, back_b])
    )


call = CallbackData("close_ticket", "id")


@market_dp.callback_query_handler(text="new_ticket")
async def new_ticket(callback_query: types.CallbackQuery):
    ticket = cursor.execute("SELECT * FROM tickets WHERE status = 0 LIMIT 1;").fetchall()
    if len(ticket) != 0:
        close_ticket_b = InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', callback_data=call.new(id=ticket[0][0]))
        new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_t')
        close_ticket_markup = InlineKeyboardMarkup(row_width=2).add(*[close_ticket_b, new_ticket_b])

        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile('files/main_logo.png'),
                       caption=f"Ticket id: <b>{ticket[0][0]}</b>\n"
                               f"Username: <b>@{ticket[0][1]}</b>\n"
                               f"Product: <b>{ticket[0][2]}</b>"),
            reply_markup=close_ticket_markup
        )
        cursor.execute("UPDATE tickets SET status = 1 WHERE id = ?", (ticket[0][0],))
        connect.commit()
    else:
        new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_ticket')
        back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='start')
        new_ticket_markup = InlineKeyboardMarkup(row_width=2).add(*[new_ticket_b, back_b])

        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile('files/main_logo.png'),
                       caption="<b>–¢–ò–ö–ï–¢–û–í –ù–ï–¢</b>\n"),
            reply_markup=new_ticket_markup
        )


@market_dp.callback_query_handler(text="new_t")
async def new_ticket(callback_query: types.CallbackQuery):
    ticket = cursor.execute("SELECT * FROM tickets WHERE status = 0 LIMIT 1;").fetchall()
    if len(ticket) != 0:
        close_ticket_b = InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', callback_data=call.new(id=ticket[0][0]))
        new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_t')
        close_ticket_markup = InlineKeyboardMarkup(row_width=2).add(*[close_ticket_b, new_ticket_b])

        await market_bot.send_photo(
            callback_query.message.chat.id,
            photo=InputFile('files/main_logo.png'),
            reply_markup=close_ticket_markup,
            caption=f"Ticket id: <b>{ticket[0][0]}</b>\n"
                    f"Username: <b>@{ticket[0][1]}</b>\n"
                    f"Product: <b>{ticket[0][2]}</b>"
        )
        cursor.execute("UPDATE tickets SET status = 1 WHERE id = ?", (ticket[0][0],))
        connect.commit()
    else:
        new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_ticket')
        back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='start')
        new_ticket_markup = InlineKeyboardMarkup(row_width=2).add(*[new_ticket_b, back_b])

        await market_bot.send_photo(
            callback_query.message.chat.id,
            photo=InputFile('files/main_logo.png'),
            reply_markup=new_ticket_markup,
            caption="<b>–¢–ò–ö–ï–¢–û–í –ù–ï–¢</b>\n"
        )


@market_dp.callback_query_handler(call.filter())
async def new_ticket(callback_query: types.CallbackQuery, callback_data: call):
    new_ticket_b = InlineKeyboardButton('–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç', callback_data='new_ticket')
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='start')
    new_ticket_markup = InlineKeyboardMarkup(row_width=2).add(*[new_ticket_b, back_b])

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption="<b>–¢–ò–ö–ï–¢ –ó–ê–ö–†–´–¢</b>\n"
                           "–û—Ç–∫—Ä–æ–π—Ç–µ <b>–Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç</b>"),
        reply_markup=new_ticket_markup
    )
    cursor.execute("DELETE FROM tickets WHERE id = ? and status = 1;", (callback_data.get("id"),))
    connect.commit()


@market_dp.callback_query_handler(text="shop")
async def shop(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/shop_logo.png'),
                   caption='üí°–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä '),
        reply_markup=m.shop_markup
    )


@market_dp.callback_query_handler(text="help")
async def help(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/h_logo.png'),
                   caption=f"üåü–î–æ—Ä–æ–≥–æ–π <b>{callback_query.message.chat.first_name}</b>!"
                           "\n–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: <b>@ova46</b>\n"
                           "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞–≥–∞–∑–∏–Ω–∞ Hayan Shop: <b>zhizhloegor_r@mail.ru</b>"),
        reply_markup=m.back_to_start_menu_markup
    )


@market_dp.callback_query_handler(text="freq_quest")
async def freq_quest(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/fq_logo.png'),
                   caption=f'–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã - '
                           f'<a href="https://telegra.ph/Otvety-na-chastye-voprosy-01-06-2"><b>—Ç—É—Ç</b></a>'),
        reply_markup=m.back_to_start_menu_markup
    )


@market_dp.callback_query_handler(text="guardian")
async def guardian(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/guar_logo.png'),
                   caption=f"–ì–∞—Ä–∞–Ω—Ç–∏–∏ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ - "
                           f'<a href="https://telegra.ph/Garantii-Hayan-Shop-01-13"><b>—Ç—É—Ç</b></a>'),
        reply_markup=m.back_to_start_menu_markup
    )


@market_dp.callback_query_handler(text="rev")
async def rev(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/rev_logo.png'),
                   caption=f'–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ - '
                           f'<a href="https://t.me/oztiv_hayan"><b>—Ç—É—Ç</b></a>'),
        reply_markup=m.back_to_start_menu_markup
    )


@market_dp.callback_query_handler(text="rules")
async def shop(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/rules_logo.png'),
                   caption='–ü—Ä–∞–≤–∏–ª–∞ –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å - <a href="https://telegra.ph/Pravila-02-04-56"><b>—Ç—É—Ç</b></a>'),
        reply_markup=m.back_to_start_menu_markup
    )


# ********

# SHOP MENU

@market_dp.callback_query_handler(text="fortnite")
async def fortnite(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ '),
        reply_markup=m.service_fort_markup
    )


@market_dp.callback_query_handler(text="discordN")
async def discordN(callback_query: types.CallbackQuery):
    basic_b = InlineKeyboardButton('BASIC', callback_data='basic')
    full_b = InlineKeyboardButton('üî•FULLüî•', callback_data='full')
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='shop')

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/all_d.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'),
        reply_markup=InlineKeyboardMarkup(row_width=2).add(*[basic_b, full_b, back_b])
    )


@market_dp.callback_query_handler(text="xbox")
async def xbox(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–£—Å–ª—É–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
        reply_markup=m.back_to_shop_menu_markup
    )


@market_dp.callback_query_handler(text="faceit")
async def faceit(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–£—Å–ª—É–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
        reply_markup=m.back_to_shop_menu_markup
    )


@market_dp.callback_query_handler(text="twitch")
async def twitch(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–£—Å–ª—É–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
        reply_markup=m.back_to_shop_menu_markup
    )


@market_dp.callback_query_handler(text="spotify")
async def playstation(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/main_logo.png'),
                   caption='–£—Å–ª—É–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
        reply_markup=m.back_to_shop_menu_markup
    )


# ********

products_price = {
    "1000vb": 229,
    "2800vb": 449,
    "5000vb": 549,
    "13500vb": 1349,
    "27000vb": 2499,
    "40500vb": 3749,
    "54000vb": 4999,
    "67500vb": 6249,
    "81000vb": 7499,
    "94500vb": 8749,
    "108000vb": 9999,
    "121500vb": 11249,
    "135000vb": 11999,
    "rec1": 599,
    "rec2": 249,
    "rec3": 499,
    "rec4": 349,
    'd30b': 249,
    'd30f': 349,
    'd365b': 1499,
    'd365f': 2499,
}

products = {
    "1000vb": "1000 –í-–±–∞–∫—Å–æ–≤",
    "2800vb": "2800 –í-–±–∞–∫—Å–æ–≤",
    "5000vb": "5000 –í-–±–∞–∫—Å–æ–≤",
    "13500vb": "13500 –í-–±–∞–∫—Å–æ–≤",
    "27000vb": "27000 –í-–±–∞–∫—Å–æ–≤",
    "40500vb": "40500 –í-–±–∞–∫—Å–æ–≤",
    "54000vb": "54000 –í-–±–∞–∫—Å–æ–≤",
    "67500vb": "67500 –í-–±–∞–∫—Å–æ–≤",
    "81000vb": "81000 –í-–±–∞–∫—Å–æ–≤",
    "94500vb": "94500 –í-–±–∞–∫—Å–æ–≤",
    "108000vb": "108000 –í-–±–∞–∫—Å–æ–≤",
    "121500vb": "121500 –í-–±–∞–∫—Å–æ–≤",
    "135000vb": "135000 –í-–±–∞–∫—Å–æ–≤",
    "rec1": "–ú—è—Ç–µ–∂–Ω—ã–π —Ä–∞–∑–≤–µ–¥—á–∏–∫",
    "rec2": "–ú–∏—Ä –≥—Ä–µ–∑",
    "rec3": "–¶–µ–Ω–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã",
    "rec4": "–ü—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏–µ –ø—É—Å—Ç–æ—Ç—ã",
    'd30b': 'Nitro Basic 30 –¥–Ω–µ–π',
    'd30f': 'Nitro Full 30 –¥–Ω–µ–π',
    'd365b': 'Nitro Basic 365 –¥–Ω–µ–π',
    'd365f': 'Nitro Full 365 –¥–Ω–µ–π',
}


# FORTNITE

@market_dp.callback_query_handler(text="vb")
async def vb(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/all_vb.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä '),
        reply_markup=m.fortnite_vb_markup
    )


@market_dp.callback_query_handler(text="rec")
async def rec(callback_query: types.CallbackQuery):
    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/rec_logo.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä '),
        reply_markup=m.fortnite_rec_markup
    )


# DISCORD NITRO

@market_dp.callback_query_handler(text="basic")
async def basic(callback_query: types.CallbackQuery):
    d30b_b = InlineKeyboardButton('Nitro Basic 30 –¥–Ω–µ–π', callback_data='d30b')
    d365b_b = InlineKeyboardButton('üí•Nitro Basic 365 –¥–Ω–µ–πüí•', callback_data='d365b')
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='discordN')

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/all_basic.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä '),
        reply_markup=InlineKeyboardMarkup(row_width=2).add(*[d30b_b, d365b_b, back_b])
    )


@market_dp.callback_query_handler(text="full")
async def full(callback_query: types.CallbackQuery):
    d30_b = InlineKeyboardButton('Nitro Full 30 –¥–Ω–µ–π', callback_data='d30f')
    d365_b = InlineKeyboardButton('üíéNitro Full 365 –¥–Ω–µ–πüíé', callback_data='d365f')
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='discordN')

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile('files/all_full.png'),
                   caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä '),
        reply_markup=InlineKeyboardMarkup(row_width=2).add(*[d30_b, d365_b, back_b])
    )


# ////
product_data = CallbackData('1', "product_name", "payment_service")


@market_dp.callback_query_handler(text=products.keys())
async def choose_p_method(callback_query: types.CallbackQuery):
    aaio_pay_b = InlineKeyboardButton('LAVA', callback_data=product_data.new(product_name=callback_query.data,
                                                                             payment_service='LAVA')
                                      )
    lava_pay_b = InlineKeyboardButton('ANYPAY', callback_data=product_data.new(product_name=callback_query.data,
                                                                               payment_service='ANYPAY')
                                      )
    back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='shop')
    pay_markup = InlineKeyboardMarkup(row_width=2).add(*[aaio_pay_b, lava_pay_b, back_b])

    await market_bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_media(
        InputMedia(media=InputFile(f'files/pay_logo.png'),
                   caption='<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.</b>'),
        reply_markup=pay_markup
    )


lava_payment_data = CallbackData('2', "order_id", "product_name")


@market_dp.callback_query_handler(product_data.filter())
async def create_payment(callback_query: types.CallbackQuery, callback_data: product_data):
    if callback_data.get('payment_service') == 'LAVA':
        invoice = await lava.create_invoice(amount=products_price[callback_data.get("product_name")], expire=20)

        pay_b = InlineKeyboardButton('–û–ø–ª–∞—Ç–∞', url=invoice.url)
        check_payment_b = InlineKeyboardButton(
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã', callback_data=lava_payment_data.new(
                order_id=invoice.invoice_id,
                product_name=callback_data.get("product_name")
            )
        )
        back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='shop')
        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile(f'files/{callback_data.get("product_name")}_logo.png'),
                       caption=f'–í—ã–±—Ä–∞–Ω —Ç–æ–≤–∞—Ä: {products[callback_data.get("product_name")]}'),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(*[pay_b, check_payment_b, back_b])
        )
    elif callback_data.get('payment_service') == 'ANYPAY':
        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile('files/main_logo.png'),
                       caption='–£—Å–ª—É–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'),
            reply_markup=m.back_to_shop_menu_markup
        )


@market_dp.callback_query_handler(lava_payment_data.filter())
async def check_lava(callback_query: types.CallbackQuery, callback_data: lava_payment_data):
    status = await lava.invoice_status(invoce_id=callback_data.get('order_id'))
    if status == "success":
        h_b = InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤‚ù§Ô∏è', callback_data='rev')
        back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='vb')
        success_markup = InlineKeyboardMarkup(row_width=2).add(*[back_b, h_b])

        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile(f'files/{callback_data.get("product_name")}_logo.png'),
                       caption=f"<b>–û–ü–õ–ê–¢–ê –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û</b>\n"
                               f"–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <b>Hayan Shop</b>.\n"
                               f"‚ù§Ô∏è–ë—É–¥–µ–º —Ä–∞–¥—ã —Ç–≤–æ–µ–º—É –æ—Ç–∑—ã–≤—É!"
                       ),
            reply_markup=success_markup
        )
        cursor.execute('INSERT INTO tickets VALUES(null, ?, ?, ?)',
                       (callback_query.message.chat.username, products[callback_data.get("product_name")], 0))
        connect.commit()
    elif status == "expired":
        pay_b = InlineKeyboardButton('–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—ÉüîÑ', callback_data='shop')
        expired_markup = InlineKeyboardMarkup(row_width=2).add(*[pay_b])

        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile(f'files/{callback_data.get("product_name")}_logo.png'),
                       caption=f"<b>–û–ü–õ–ê–¢–ê –ù–ï –ë–´–õ–ê –ü–†–û–ò–ó–í–ï–î–ï–ù–ê –í–û–í–†–ï–ú–Ø.</b>\n"
                               f"–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π: <b>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</b>üîÑ."
                       ),
            reply_markup=expired_markup
        )
    else:
        pay_b = InlineKeyboardButton('–û–ø–ª–∞—Ç–∞',
                                     url=f"https://pay.lava.ru/invoice/{callback_data.get('order_id')}?lang=ru")
        check_payment_b = InlineKeyboardButton(
            '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã', callback_data=lava_payment_data.new(
                product_name=callback_data.get("product_name"),
                order_id=callback_data.get('order_id')
            )
        )
        back_b = InlineKeyboardButton('–ù–∞–∑–∞–¥üîô', callback_data='shop')

        await market_bot.answer_callback_query(callback_query.id)
        await callback_query.message.edit_media(
            InputMedia(media=InputFile(f'files/{callback_data.get("product_name")}_logo.png'),
                       caption=f"<b>–û–ü–õ–ê–¢–ê –ï–©–ï –ù–ï –ü–†–û–®–õ–ê.</b>\n"
                               f"–û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–Ω–æ–≤–æ."
                       ),
            reply_markup=InlineKeyboardMarkup(row_width=2).add(*[pay_b, check_payment_b, back_b])
        )
